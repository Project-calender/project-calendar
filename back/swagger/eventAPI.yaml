/api/event/getAllEvent:
  post:
    tags:
      - event
    summary: 날짜 내에 모든 이벤트 가져오기
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            startDate:
              type: string
              example: "2022-08-01"
            endDate:
              type: string
              example: "2022-08-02"
    responses:
      200:
        description: 성공
        schema:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              color:
                type: string
              private:
                type: boolean
              OwnerId:
                type: string
              Events:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    color:
                      type: string
                    permission:
                      type: integer
                    memo:
                      type: string
                    startTime:
                      type: string
                    endTime:
                      type: string
                    allDay:
                      type: boolean
                    eventHostEmail:
                      type: string
                    ChildEvents:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          color:
                            type: string
                          permission:
                            type: integer
                          memo:
                            type: string
                          startTime:
                            type: string
                          endTime:
                            type: string
                          allDay:
                            type: boolean
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/getAllEventForYear:
  post:
    tags:
      - event
    summary: 1년 동안의 모든 이벤트 가져오기 (정렬은 하지 않음, 필요한 정렬 순서가 있다면 요청 )
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            startTime:
              type: string
              example: "2022-08-01"
    responses:
      200:
        description: 성공
        schema:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              color:
                type: string
              memo:
                type: string
              startTime:
                type: string
              endTime:
                type: string
              allDay:
                type: integer
              busy:
                type: integer
              permission:
                type: integer
                example: 1 그룹 캘린더 전용
              EventHostId:
                type: integer
                example: 1 그룹 캘린더 전용
              CalendarId:
                type: integer
                example: 1 그룹 캘린더 전용
              PrivateCalendarId:
                type: integer
                example: 1 개인 캘린더 전용
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/getEvent:
  post:
    tags:
      - event
    summary: 특정 이벤트의 모든 정보 가져오기
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            eventId:
              type: integer
    responses:
      200:
        description: 성공
        schema:
          properties:
            events:
              type: object
              properties:
                id:
                  type: integer
                color:
                  type: string
                priority:
                  type: string
                memo:
                  type: string
                startTime:
                  type: string
                endTime:
                  type: string
                EventHostId:
                  type: integer
                CalendarId:
                  type: integer
                eventHostEmail:
                  type: string
                  example: "minwoo@naver.com"
                EventMembers:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      nickname:
                        type: string
                      ProfileImages:
                        type: object
                        properties:
                          src:
                            type: integer
                      EventMember:
                        type: object
                        properties:
                          state:
                            type: integer
                          UserId:
                            type: integer
                          EventId:
                            type: integer
            realTimeAlert:
              type: object
              properties:
                type:
                  type: string
                  example: minute, hour, day, week / day, week (allDay)
                time:
                  type: integer
                  example: 1
                hour:
                  type: integer
                  example: 1 (allDay)
                minute:
                  type: integer
                  example: 1 (allDay)
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/inviteCheckBeforeCreate:
  post:
    tags:
      - event
    summary: 이벤트에 초대 가능한지 확인하기 (이벤트 생성 전 inviteCheckBeforeCreateEvent -> createGroupEvent )
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            guestEmail:
              type: string
            calendarId:
              type: integer
    responses:
      200:
        description: 성공
        schema:
          properties:
            guest:
              type: object
              properties:
                id:
                  type: integer
                email:
                  type: string
                nickname:
                  type: string
                ProfileImages:
                  type: object
                  properties:
                    src:
                      type: string
            canInvite:
              type: boolean
              example: true
      400:
        description: 존재하지 않는 유저
        schema:
          properties:
            message:
              type: string
              example: 존재하지 않는 유저입니다!
            canInvite:
              type: boolean
              example: false
      402:
        description: 존재하는 유저지만 그룹캘린더에는 초대되지 않은 유저
        schema:
          properties:
            message:
              type: string
              example: 그룹 캘린더에 존재하지 않는 유저입니다!
            canInvite:
              type: boolean
              example: false
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/createEvent:
  post:
    tags:
      - event
    summary: 이벤트 생성하기 permission 1 or 2 / busy 0 or 1 ( alert지금은 막아놨어요 alert다시 완벽하게 만들어 놓을게요 ㅠ)
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            calendarId:
              type: integer
            eventName:
              type: string
            color:
              type: integer
              example: "#0e0e03"
            permission:
              type: integer
            busy:
              type: integer
            memo:
              type: string
            startTime:
              type: string
              example: "2022-06-01T00:00:00"
            endTime:
              type: string
              example: "2022-06-02T00:00:00"
            allDay:
              type: integer
              example: 1
            alerts:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: "minute,hour,day,week (not allDay) / day,week (allDay)"
                  time:
                    type: integer
                    example: 몇일, 몇시간, 몇분전 인지
                  hour:
                    type: integer
                    example: 0-23시 중 써주세요 알림 받고자 하는 시각 (allDay 전용)
                  minute:
                    type: integer
                    example: 알람 받고자 하는 분 ex) 오후 3시 15분에 받고 싶다면 hour에 15, minute에 15 (allDay 전용)
            guests:
              type: array
              items:
                type: integer
                example: 1
    responses:
      200:
        $ref: "./openapi.yaml#/returnEvent"
      402:
        description: 존재하는 유저지만 그룹캘린더에는 초대되지 않은 유저
        schema:
          properties:
            message:
              type: string
              example: 그룹 캘린더에 존재하지 않는 유저입니다!
            canInvite:
              type: boolean
              example: false
      400:
        description: 그룹원이 아닌 사람이 이벤트를 생성하려 할때
        schema:
          properties:
            message:
              type: string
              example: 캘린더의 멤버만 이벤트를 생성할 수 있습니다.
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/inviteCheck:
  post:
    tags:
      - event
    summary: 이벤트에 초대 가능한지 확인하기 ( 이미 존재하는 이벤트에 초대 체크 )
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            guests:
              type: array
              items:
                type: object
                example: "minwoo@naver.com"
            calendarId:
              type: integer
            eventId:
              type: integer
    responses:
      200:
        description: 성공
        schema:
          properties:
            guest:
              type: object
              properties:
                id:
                  type: integer
                email:
                  type: string
                nickname:
                  type: string
                ProfileImages:
                  type: object
                  properties:
                    src:
                      type: string
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/editEvent:
  post:
    tags:
      - event
    summary: 이벤트 수정하기 permission 1 or 2 / busy 0 or 1
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            calendarId:
              type: integer
              example: 1
            eventId:
              type: integer
              example: 1
            eventName:
              type: string
            color:
              type: integer
              example: "#0e0e0e"
            permission:
              type: integer
            busy:
              type: integer
            memo:
              type: string
            startTime:
              type: string
              example: "2022-06-02T00:00:00"
            endTime:
              type: string
              example: "2022-06-02T00:00:00"
            allDay:
              type: integer
              example: 1
            alerts:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: "minute,hour,day,week (not allDay) / day,week (allDay)"
                  time:
                    type: integer
                    example: 몇일, 몇시간, 몇분전 인지
                  hour:
                    type: integer
                    example: 0-23시 중 써주세요 알림 받고자 하는 시각 (allDay 전용)
                  minute:
                    type: integer
                    example: 알람 받고자 하는 분 ex) 오후 3시 15분에 받고 싶다면 hour에 15, minute에 15 (allDay 전용)
            guests:
              type: array
              items:
                type: object
                example: 1
    responses:
      200:
        $ref: "./openapi.yaml#/returnEvent"
      400:
        description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
        schema:
          properties:
            message:
              type: string
              example: 존재하지 않는 이벤트 입니다!
      403:
        description: 수정 권한이 없는 경우 ( 권한 2 미만 )
        schema:
          properties:
            message:
              type: string
              example: 수정 권한이 없습니다!
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/editEventColor:
  post:
    tags:
      - event
    summary: 이벤트 색상 변경하기
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            eventId:
              type: integer
              example: 1
            color:
              type: string
    responses:
      200:
        $ref: "./openapi.yaml#/returnEvent"
      400:
        description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
        schema:
          properties:
            message:
              type: string
              example: 존재하지 않는 이벤트 입니다!
      402:
        description: 수정 권한이 없는 경우 ( 권한 2 미만 )
        schema:
          properties:
            message:
              type: string
              example: 수정 권한이 없습니다!
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/deleteEvent:
  post:
    tags:
      - event
    summary: 이벤트 삭제하기
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            calendarId:
              type: integer
              example: 1
            eventId:
              type: integer
              example: 1
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      400:
        description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
        schema:
          properties:
            message:
              type: string
              example: 존재하지 않는 이벤트 입니다!
      401:
        description: 삭제 권한이 없는 경우 ( 권한 2 미만 )
        schema:
          properties:
            message:
              type: string
              example: 삭제 권한이 없습니다!
      500:
        $ref: "./openapi.yaml#/serverError"
/api/event/changeEventInviteState:
  post:
    tags:
      - event
    summary: 이벤트 참여 상태 변경하기 수락 1 / 보류 2 / 거절 3 아무것도 누르지 않았다면 default 0
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            eventId:
              type: integer
              example: 1
            state:
              type: integer
              example: 1
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      400:
        description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
        schema:
          properties:
            message:
              type: string
              example: 존재하지 않는 이벤트 입니다!
      500:
        $ref: "./openapi.yaml#/serverError"
# /api/event/searchEvent:
#   post:
#     tags:
#       - event
#     summary: 이벤트 이름으로 검색하기
#     parameters:
#       - name: Authorization
#         in: header
#         required: true
#       - name: body
#         in: body
#         required: true
#         schema:
#           type: object
#           properties:
#             searchWord:
#               type: string
#     responses:
#       200:
#         description: 성공
#         schema:
#           type: array
#           items:
#             type: object
#             properties:
#               id:
#                 type: integer
#               name:
#                 type: string
#               startTime:
#                 type: string
#               endTime:
#                 type: string
#               allDay:
#                 type: boolean
#               CalendarId:
#                 type: integer
#       500:
#         $ref: "./openapi.yaml#/serverError"
/api/event/editChildEvent:
  post:
    tags:
      - event
    summary: 딸림 이벤트 수정하기 ( 부모이벤트가 수정되거나 삭제되면, 동시에 수정 삭제 )
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            eventId:
              type: integer
              example: 1
            eventName:
              type: string
            color:
              type: integer
              example: "#0e0e0e"
            busy:
              type: integer
            memo:
              type: string
            allDay:
              type: integer
              example: 1
            startTime:
              type: string
              example: "2022-06-02T00:00:00"
            endTime:
              type: string
              example: "2022-06-02T00:00:00"
    responses:
      400:
        description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
        schema:
          properties:
            message:
              type: string
              example: 존재하지 않는 이벤트 입니다!
      200:
        $ref: "./openapi.yaml#/returnChildEvent"
/api/event/deleteChildEvent:
  post:
    tags:
      - event
    summary: 딸림 이벤트 삭제하기 ( 부모이벤트가 수정되거나 삭제되면, 동시에 수정 삭제 )
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            eventId:
              type: integer
              example: 1
    responses:
      200:
        $ref: "./openapi.yaml#/success"
$ref: "./alertAPI.yaml"
