swagger: '2.0'
info:
  version: 1.0.0
  title: GoogleCalendar-API-docs
  description: GoogleCalendar API문서
  servers:
    - description: GoogleCalendar-Clone API
      url: 'http://158.247.214.79/'
    - description: GoogleCalendar-Clone dev
      url: 'http://localhost:80/'
tags:
  - name: auth
    description: API about auth
  - name: calendar
    description: API about calendar
  - name: event
    description: API about event
  - name: alert
    description: API about alert
paths:
  /api/auth/signup:
    post:
      tags:
        - auth
      summary: 회원가입
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              nickname:
                type: string
              profileImageSrc:
                type: string
      responses:
        '200':
          $ref: '#/success'
        '401':
          description: 이메일 중복
          schema:
            properties:
              message:
                type: string
                example: 이미 사용중인 이메일 입니다!
        '402':
          description: 닉네임 중복
          schema:
            properties:
              message:
                type: string
                example: 이미 사용중인 닉네임 입니다!
        '500':
          $ref: '#/serverError'
  /api/auth/signin:
    post:
      tags:
        - auth
      summary: 로그인
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: 성공
          schema:
            properties:
              userData:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  nickname:
                    type: string
                  checkedCalendar:
                    type: string
                    example: '0,1,24'
                  ProfileImages:
                    type: object
                    properties:
                      src:
                        type: string
                  refreshToken:
                    type: string
                  accessToken:
                    type: string
        '401':
          description: 존재하지 않는 유저 (이메일이 틀린 경우)
          schema:
            properties:
              message:
                type: string
                example: null
        '402':
          description: 비밀번호 일치하지 않음 (이메일은 맞지만 비밀번호가 틀린 경우)
          schema:
            properties:
              message:
                type: string
                example: 패스워드가 일치하지 않습니다!
        '500':
          $ref: '#/serverError'
  /api/auth/logout:
    post:
      tags:
        - auth
      summary: 로그아웃
      parameters:
        - name: Authorization
          in: header
          required: true
      responses:
        '200':
          $ref: '#/success'
  /api/auth/setUserProfileImage:
    post:
      tags:
        - auth
      summary: 회원가입 시 프로필 사진 등록
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: upfile
          type: file
          description: The file to upload.
      responses:
        '200':
          description: 성공
          schema:
            properties:
              src:
                type: string
                example: ./filepath
        '500':
          $ref: '#/serverError'
  /api/auth/changeNickname:
    post:
      tags:
        - auth
      summary: 닉네임 수정
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              nickname:
                type: string
      responses:
        '200':
          $ref: '#/returnUser'
        '500':
          $ref: '#/serverError'
  /api/auth/changePassword:
    post:
      tags:
        - auth
      summary: 비밀번호 수정
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
      responses:
        '200':
          $ref: '#/success'
        '500':
          $ref: '#/serverError'
  /api/auth/changeProfileImage:
    post:
      tags:
        - auth
      summary: 프로필 이미지 수정
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              profileImageSrc:
                type: string
      responses:
        '200':
          $ref: '#/returnUser'
        '500':
          $ref: '#/serverError'
  /api/auth/deleteProfileImage:
    post:
      tags:
        - auth
      summary: 프로필 이미지 삭제 ( 삭제시 기본이미지로 변경됨 )
      parameters:
        - name: Authorization
          in: header
          required: true
      responses:
        '200':
          $ref: '#/returnUser'
        '500':
          $ref: '#/serverError'
  /api/auth/resign:
    post:
      tags:
        - auth
      summary: 회원 탈퇴
      parameters:
        - name: Authorization
          in: header
          required: true
      responses:
        '200':
          $ref: '#/success'
        '500':
          $ref: '#/serverError'
  /api/auth/checkedCalendar:
    post:
      tags:
        - auth
      summary: 달력 체킹 수정
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              checkedList:
                type: string
      responses:
        '200':
          $ref: '#/success'
        '500':
          $ref: '#/serverError'
  /api/auth/refresh:
    get:
      tags:
        - auth
      summary: 토큰 refresh
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: refresh
          in: header
          required: true
      responses:
        '200':
          description: 성공
          schema:
            properties:
              ok:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  accessToken:
                    type: string
                    exmaple: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjU4MjA4NDQzLCJleHAiOjE2NTgyOTQ4NDN9.xI5ylpNtkeC5wnf4mnqcP3nbFMpm1mKjrHySxLJyN_4
                  refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjU4MjA4NDQzLCJleHAiOjE2NTgyOTQ4NDN9.xI5ylpNtkeC5wnf4mnqcP3nbFMpm1mKjrHySxLJyN_4
        '403':
          description: 'refresh 토큰 발급 도중 access token, refresh token이 모두 헤더에 없는 경우'
          schema:
            properties:
              success:
                type: string
                example: Access token and refresh token are need for refresh!
        '405':
          description: refresh 토큰 발급 도중 토큰에 유저 정보가 없을 경우
          schema:
            properties:
              success:
                type: string
                example: No authorized!
        '406':
          description: refresh 토큰 발급 도중 토큰이 지급되지 않을 경우
          schema:
            properties:
              success:
                type: string
                example: accessToken이 지급되지 않았습니다
        '500':
          $ref: '#/serverError'
  /api/calendar/getMyCalendars:
    post:
      tags:
        - calendar
      summary: 내 캘린더들 모두 가져오기
      parameters:
        - name: Authorization
          in: header
          required: true
      responses:
        '200':
          description: 성공
          schema:
            properties:
              calendars:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    color:
                      type: string
                    Owner:
                      type: object
                      properties:
                        id:
                          type: integer
                        email:
                          type: string
                        nickname:
                          type: string
                        ProfileImages:
                          type: object
                          properties:
                            src:
                              type: string
                    CalendarMember:
                      type: object
                      properties:
                        authority:
                          type: integer
                    CalendarMembers:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          email:
                            type: string
                          nickname:
                            type: string
                          userAuthority:
                            type: object
                            properties:
                              authority:
                                type: integer
                          ProfileImages:
                            type: object
                            properties:
                              src:
                                type: string
        '500':
          $ref: '#/serverError'
  /api/calendar/createGroupCalendar:
    post:
      tags:
        - calendar
      summary: 그룹캘린더 만들기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarName:
                type: string
              calendarColor:
                type: string
      responses:
        '200':
          $ref: '#/returnCalendar'
        '500':
          $ref: '#/serverError'
  /api/calendar/editCalendar:
    post:
      tags:
        - calendar
      summary: 그룹캘린더나 개인캘린더 수정
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
              calendarName:
                type: string
              calendarColor:
                type: string
      responses:
        '200':
          $ref: '#/returnCalendar'
        '400':
          description: 권한을 부여하는 유저가 권한이 3 미만인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 권한이 없습니다!
        '500':
          $ref: '#/serverError'
  /api/calendar/deleteGroupCalendar:
    post:
      tags:
        - calendar
      summary: 그룹캘린더 삭제
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 개인 캘린더를 삭제하려는 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 개인 캘린더는 삭제할 수 없습니다!
        '402':
          description: 캘린더를 삭제하려는 유저가 권한이 3 미만인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 권한이 없습니다!
        '500':
          $ref: '#/serverError'
  /api/calendar/inviteGroupCalendar:
    post:
      tags:
        - calendar
      summary: 그룹 캘린더 초대
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              guestEmail:
                type: string
              calendarId:
                type: integer
              authority:
                type: integer
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 권한을 부여하는 유저가 권한이 3 미만인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 권한이 없습니다!
        '402':
          description: 게스트 조회 결과가 없을 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 유저입니다!
        '403':
          description: 이미 초대를 보낸 게스트일 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 이미 해당 달력에 초대장을 보낸 상대입니다!
        '405':
          description: 초대를 보낸 게스트가 이미 그룹 캘린더 맴버일 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 이미 캘린더의 그룹원 입니다!
        '406':
          description: 개인 캘린더에 초대하려고 할 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 개인 캘린더에는 초대불가능 합니다!
        '500':
          $ref: '#/serverError'
  /api/calendar/acceptCalendarInvite:
    post:
      tags:
        - calendar
      summary: 그룹 캘린더 초대 수락
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
              alertId:
                type: integer
      responses:
        '200':
          $ref: '#/returnCalendar'
        '400':
          description: 캘린더 조회 결과가 없는 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 캘린더입니다!
        '402':
          description: 초대받은 사람이 이미 맴버인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 이미 캘린더의 그룹원 입니다!
        '403':
          description: 존재하지 않은 초대장을 받을 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 초대장입니다
        '500':
          $ref: '#/serverError'
  /api/calendar/rejectCalendarInvite:
    post:
      tags:
        - calendar
      summary: 그룹 캘린더 초대 거부
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
              alertId:
                type: integer
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 캘린더 조회 결과가 없는 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 캘린더입니다!
        '402':
          description: 초대받은 사람이 이미 맴버인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 이미 캘린더의 그룹원 입니다!
        '403':
          description: 존재하지 않은 초대장을 받을 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 초대장입니다
        '500':
          $ref: '#/serverError'
  /api/calendar/resignCalendar:
    post:
      tags:
        - calendar
      summary: 그룹 캘린더 탈퇴하기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 존재하지 않는 캘린더일때
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 캘린더 입니다!
        '402':
          description: 개인 캘린더를 탈퇴하려 할 때
          schema:
            type: object
            properties:
              message:
                type: string
                example: 개인 캘린더는 탈퇴 할 수 없습니다!
        '500':
          $ref: '#/serverError'
  /api/calendar/sendOutUser:
    post:
      tags:
        - calendar
      summary: 캘린더 멤버 강퇴하기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
              userEmail:
                type: string
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 권한을 부여하는 유저가 권한이 3 미만인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 권한 부여는 달력의 오너만 가능합니다!
        '402':
          description: 유저 조회 결과가 없는 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 유저입니다!
        '403':
          description: 그룹 캘린더에 존재하지 않는 유저일때
          schema:
            type: object
            properties:
              message:
                type: string
                example: 그룹 캘린더에 존재하지 않는 유저입니다!
        '500':
          $ref: '#/serverError'
  /api/calendar/giveAuthority:
    post:
      tags:
        - calendar
      summary: 그룹 캘린더 권한 부여
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
              userEmail:
                type: string
              newAuthority:
                type: integer
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 권한을 부여하는 유저가 권한이 3 미만인 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 권한 부여는 달력의 오너만 가능합니다!
        '402':
          description: 유저 조회 결과가 없는 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 유저입니다!
        '403':
          description: 존재하지 않는 캘린더일때
          schema:
            type: object
            properties:
              message:
                type: string
                example: 존재하지 않는 캘린더입니다!
        '405':
          description: 권한 조정을 받은 유저가 그룹 맴버가 아닌 경우
          schema:
            type: object
            properties:
              message:
                type: string
                example: 그룹 캘린더에 존재하지 초대되지 않은 유저입니다!
        '500':
          $ref: '#/serverError'
  /api/event/getAllEvent:
    post:
      tags:
        - event
      summary: 날짜 내에 모든 이벤트 가져오기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              startDate:
                type: string
                example: '2022-08-01'
              endDate:
                type: string
                example: '2022-08-02'
      responses:
        '200':
          description: 성공
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                color:
                  type: string
                private:
                  type: boolean
                OwnerId:
                  type: string
                Events:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      color:
                        type: string
                      permission:
                        type: integer
                      memo:
                        type: string
                      startTime:
                        type: string
                      endTime:
                        type: string
                      allDay:
                        type: boolean
                      eventHostEmail:
                        type: string
                      ChildEvents:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            color:
                              type: string
                            permission:
                              type: integer
                            memo:
                              type: string
                            startTime:
                              type: string
                            endTime:
                              type: string
                            allDay:
                              type: boolean
        '500':
          $ref: '#/serverError'
  /api/event/getEvent:
    post:
      tags:
        - event
      summary: 특정 이벤트의 모든 정보 가져오기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: integer
      responses:
        '200':
          description: 성공
          schema:
            properties:
              events:
                type: object
                properties:
                  id:
                    type: integer
                  color:
                    type: string
                  priority:
                    type: string
                  memo:
                    type: string
                  startTime:
                    type: string
                  endTime:
                    type: string
                  EventHostId:
                    type: integer
                  CalendarId:
                    type: integer
                  eventHostEmail:
                    type: string
                    example: minwoo@naver.com
                  EventMembers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        nickname:
                          type: string
                        ProfileImages:
                          type: object
                          properties:
                            src:
                              type: integer
                        EventMember:
                          type: object
                          properties:
                            state:
                              type: integer
                            UserId:
                              type: integer
                            EventId:
                              type: integer
              realTimeAlert:
                type: object
                properties:
                  type:
                    type: string
                    example: 'minute, hour, day, week / day, week (allDay)'
                  time:
                    type: integer
                    example: 1
                  hour:
                    type: integer
                    example: 1 (allDay)
                  minute:
                    type: integer
                    example: 1 (allDay)
        '500':
          $ref: '#/serverError'
  /api/event/inviteCheckBeforeCreate:
    post:
      tags:
        - event
      summary: 이벤트에 초대 가능한지 확인하기 (이벤트 생성 전 inviteCheckBeforeCreateEvent -> createGroupEvent )
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              guestEmail:
                type: string
              calendarId:
                type: integer
      responses:
        '200':
          description: 성공
          schema:
            properties:
              guest:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  nickname:
                    type: string
                  ProfileImages:
                    type: object
                    properties:
                      src:
                        type: string
              canInvite:
                type: boolean
                example: true
        '400':
          description: 존재하지 않는 유저
          schema:
            properties:
              message:
                type: string
                example: 존재하지 않는 유저입니다!
              canInvite:
                type: boolean
                example: false
        '402':
          description: 존재하는 유저지만 그룹캘린더에는 초대되지 않은 유저
          schema:
            properties:
              message:
                type: string
                example: 그룹 캘린더에 존재하지 않는 유저입니다!
              canInvite:
                type: boolean
                example: false
        '500':
          $ref: '#/serverError'
  /api/event/createEvent:
    post:
      tags:
        - event
      summary: 이벤트 생성하기 permission 1 or 2 / busy 0 or 1 ( alert지금은 막아놨어요 alert다시 완벽하게 만들어 놓을게요 ㅠ)
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
              eventName:
                type: string
              color:
                type: integer
                example: '#0e0e03'
              permission:
                type: integer
              busy:
                type: integer
              memo:
                type: string
              startTime:
                type: string
                example: '2022-06-01T00:00:00'
              endTime:
                type: string
                example: '2022-06-02T00:00:00'
              allDay:
                type: integer
                example: 1
              alerts:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      example: 'minute,hour,day,week (not allDay) / day,week (allDay)'
                    time:
                      type: integer
                      example: '몇일, 몇시간, 몇분전 인지'
                    hour:
                      type: integer
                      example: 0-23시 중 써주세요 알림 받고자 하는 시각 (allDay 전용)
                    minute:
                      type: integer
                      example: '알람 받고자 하는 분 ex) 오후 3시 15분에 받고 싶다면 hour에 15, minute에 15 (allDay 전용)'
              guests:
                type: array
                items:
                  type: integer
                  example: 1
      responses:
        '200':
          $ref: '#/returnEvent'
        '400':
          description: 그룹원이 아닌 사람이 이벤트를 생성하려 할때
          schema:
            properties:
              message:
                type: string
                example: 캘린더의 멤버만 이벤트를 생성할 수 있습니다.
        '402':
          description: 존재하는 유저지만 그룹캘린더에는 초대되지 않은 유저
          schema:
            properties:
              message:
                type: string
                example: 그룹 캘린더에 존재하지 않는 유저입니다!
              canInvite:
                type: boolean
                example: false
        '500':
          $ref: '#/serverError'
  /api/event/inviteCheck:
    post:
      tags:
        - event
      summary: 이벤트에 초대 가능한지 확인하기 ( 이미 존재하는 이벤트에 초대 체크 )
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              guests:
                type: array
                items:
                  type: object
                  example: minwoo@naver.com
              calendarId:
                type: integer
              eventId:
                type: integer
      responses:
        '200':
          description: 성공
          schema:
            properties:
              guest:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  nickname:
                    type: string
                  ProfileImages:
                    type: object
                    properties:
                      src:
                        type: string
        '500':
          $ref: '#/serverError'
  /api/event/editEvent:
    post:
      tags:
        - event
      summary: 이벤트 수정하기 permission 1 or 2 / busy 0 or 1
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
                example: 1
              eventId:
                type: integer
                example: 1
              eventName:
                type: string
              color:
                type: integer
                example: '#0e0e0e'
              permission:
                type: integer
              busy:
                type: integer
              memo:
                type: string
              startTime:
                type: string
                example: '2022-06-02T00:00:00'
              endTime:
                type: string
                example: '2022-06-02T00:00:00'
              allDay:
                type: integer
                example: 1
              alerts:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      example: 'minute,hour,day,week (not allDay) / day,week (allDay)'
                    time:
                      type: integer
                      example: '몇일, 몇시간, 몇분전 인지'
                    hour:
                      type: integer
                      example: 0-23시 중 써주세요 알림 받고자 하는 시각 (allDay 전용)
                    minute:
                      type: integer
                      example: '알람 받고자 하는 분 ex) 오후 3시 15분에 받고 싶다면 hour에 15, minute에 15 (allDay 전용)'
              guests:
                type: array
                items:
                  type: object
                  example: 1
      responses:
        '200':
          $ref: '#/returnEvent'
        '400':
          description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
          schema:
            properties:
              message:
                type: string
                example: 존재하지 않는 이벤트 입니다!
        '403':
          description: 수정 권한이 없는 경우 ( 권한 2 미만 )
          schema:
            properties:
              message:
                type: string
                example: 수정 권한이 없습니다!
        '500':
          $ref: '#/serverError'
  /api/event/editEventColor:
    post:
      tags:
        - event
      summary: 이벤트 색상 변경하기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: integer
                example: 1
              color:
                type: string
      responses:
        '200':
          $ref: '#/returnEvent'
        '400':
          description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
          schema:
            properties:
              message:
                type: string
                example: 존재하지 않는 이벤트 입니다!
        '402':
          description: 수정 권한이 없는 경우 ( 권한 2 미만 )
          schema:
            properties:
              message:
                type: string
                example: 수정 권한이 없습니다!
        '500':
          $ref: '#/serverError'
  /api/event/deleteEvent:
    post:
      tags:
        - event
      summary: 이벤트 삭제하기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              calendarId:
                type: integer
                example: 1
              eventId:
                type: integer
                example: 1
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
          schema:
            properties:
              message:
                type: string
                example: 존재하지 않는 이벤트 입니다!
        '401':
          description: 삭제 권한이 없는 경우 ( 권한 2 미만 )
          schema:
            properties:
              message:
                type: string
                example: 삭제 권한이 없습니다!
        '500':
          $ref: '#/serverError'
  /api/event/changeEventInviteState:
    post:
      tags:
        - event
      summary: 이벤트 참여 상태 변경하기 수락 1 / 보류 2 / 거절 3 아무것도 누르지 않았다면 default 0
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: integer
                example: 1
              state:
                type: integer
                example: 1
      responses:
        '200':
          $ref: '#/success'
        '400':
          description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
          schema:
            properties:
              message:
                type: string
                example: 존재하지 않는 이벤트 입니다!
        '500':
          $ref: '#/serverError'
  /api/event/editChildEvent:
    post:
      tags:
        - event
      summary: '딸림 이벤트 수정하기 ( 부모이벤트가 수정되거나 삭제되면, 동시에 수정 삭제 )'
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: integer
                example: 1
              eventName:
                type: string
              color:
                type: integer
                example: '#0e0e0e'
              busy:
                type: integer
              memo:
                type: string
              allDay:
                type: integer
                example: 1
              startTime:
                type: string
                example: '2022-06-02T00:00:00'
              endTime:
                type: string
                example: '2022-06-02T00:00:00'
      responses:
        '200':
          $ref: '#/returnChildEvent'
        '400':
          description: 존재하지 않는 이벤트 (삭제되었거나 달력이 없어진 경우)
          schema:
            properties:
              message:
                type: string
                example: 존재하지 않는 이벤트 입니다!
  /api/event/deleteChildEvent:
    post:
      tags:
        - event
      summary: '딸림 이벤트 삭제하기 ( 부모이벤트가 수정되거나 삭제되면, 동시에 수정 삭제 )'
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: integer
                example: 1
      responses:
        '200':
          $ref: '#/success'
  /api/alert/getAlerts:
    post:
      tags:
        - alert
      summary: '알림 가져오기 calenderChanged (캘린더 정보 변경 알림) / calendarInvite (캘린더 초대받음) / calenderNewMember (초대받은 사람이 수락 시, 해당 캘린더의 모두에게 알림) / calendarInviteReject (초대받은 사람이 거절시, 초대장 보낸 사람에게 알림) / authorityChange (나의 권한 변경됨) / event (이벤트 초대받음, 새 유저 참여, 유저 탈퇴 ) / eventRemoved (이벤트 삭제)'
      parameters:
        - name: Authorization
          in: header
          required: true
      responses:
        '200':
          description: 성공
          schema:
            type: array
            items:
              type: object
              properties:
                count:
                  type: integer
                  example: 96 (전체 알림 개수)
                alerts:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      type:
                        type: string
                        example: 위에 type별 설명 적어 놓음
                      content:
                        type: string
                      checked:
                        type: boolean
                        example: false/true 읽음 표시
                      calendarId:
                        type: integer
                        example: 달력 초대 수락/거부시 서버에 전송 ( 또는 수정된 캘린더로 이동하는 기능 만들때 사용 )
                      eventDate:
                        type: string
                        example: '이벤트 시작 날짜 ( 이벤트 초대 받았을 때나 이벤트가 수정 되었을때, 그 이벤트가 있는 날짜로 가는 기능을 만들 시에 사용 )'
                      createdAt:
                        type: string
                        example: 알림 생성 날짜
        '500':
          $ref: '#/serverError'
  /api/alert/read:
    post:
      tags:
        - alert
      summary: 알림 읽음 표시하기
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              alertId:
                type: integer
      responses:
        '200':
          $ref: '#/success'
        '500':
          $ref: '#/serverError'
returnUser:
  description: 성공
  schema:
    properties:
      id:
        type: integer
      email:
        type: string
      nickname:
        type: string
      ProfileImages:
        type: object
        properties:
          src:
            type: string
returnCalendar:
  description: 성공
  schema:
    properties:
      id:
        type: string
        example: true
      name:
        type: string
        example: true
      color:
        type: string
        example: true
      OwnerId:
        type: string
        example: true
returnEvent:
  description: 성공
  schema:
    properties:
      id:
        type: integer
      name:
        type: string
      busy:
        type: integer
      permission:
        type: integer
      memo:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      allDay:
        type: boolean
        example: true
      eventHostEmail:
        type: integer
      CalendarId:
        type: integer
returnChildEvent:
  description: 성공
  schema:
    properties:
      id:
        type: integer
      name:
        type: string
      color:
        type: string
      permission:
        type: integer
      memo:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      allDay:
        type: boolean
returnPrivateEvent:
  description: 성공
  schema:
    properties:
      id:
        type: integer
      name:
        type: string
      busy:
        type: integer
      memo:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      groupEventId:
        type: integer
      state:
        type: integer
      allDay:
        type: boolean
        example: true
      privateCalendarId:
        type: integer
success:
  description: 성공
  schema:
    properties:
      success:
        type: boolean
        example: true
serverError:
  description: 서버 에러
  schema:
    properties:
      message:
        type: string
        example: 서버 에러
